/*
Задача 2

Что нужно сделать:
Кролик сидит на нулевой ступеньке большой лестницы. Он может прыгать на
одну или более ступенек вверх, но не далее чем на k. Кролик хочет
допрыгать до n-й ступеньки, но может сделать это большим количеством
способов. Напишите рекурсивную функцию, которая принимает число n типа
int и число k — максимальную длину прыжка, а возвращает количество
способов, которым кролик может доскакать до n-й ступеньки. В функции для
аргумента “максимальная длина прыжка” задать значение, по умолчанию
равное 3.

Пример:

Ввод: 3, 2
Вывод: 3
Пояснение: (1,2), (2,1), (1,1,1)
*/

#include <iostream>

int main()
{
    int countSteps(int n, int i = 3, int k = 3);

    int n, k;

    std::cout << "Input n: ";
    std::cin >> n;
    std::cout << "Input k: ";
    std::cin >> k;

    std::cout << countSteps(n, k, k) << std::endl; // test 1

    std::cout << std::endl
              << std::endl;

    std::cout << "Input n: ";
    std::cin >> n;

    std::cout << countSteps(n) << std::endl; // test 2

    return 0;
}

// Не понял как обойтись без дополнительного счетчика
int countSteps(int n, int i = 3, int k = 3)
{

    if (n == 0)
        return 1;
    if (n < 0 || i < 1)
        return 0;
    return countSteps(n - i, k, k) + countSteps(n, i - 1, k);
}
